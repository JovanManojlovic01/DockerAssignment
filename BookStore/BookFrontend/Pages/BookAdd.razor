@page "/books/add"
@using BookFrontend.Services
@using BookFrontend.Models
@inject BookService BookService
@inject NavigationManager GoTo

<div class="container mt-5">
    <h3 class="text-primary">Add Book</h3>

    <EditForm Model="newBook" OnValidSubmit="HandleValidSubmit">
        <div class="mb-3">
            <label for="title" class="form-label">Title</label>
            <InputText id="title" class="form-control" @bind-Value="newBook.Title" />
        </div>

        <div class="mb-3">
            <label for="author" class="form-label">Author</label>
            <InputText id="author" class="form-control" @bind-Value="newBook.Author" />
        </div>

        <div class="mb-3">
            <label for="year" class="form-label">Year of Release</label>
            <InputNumber id="year" class="form-control" @bind-Value="newBook.YearOfRelease" />
        </div>

        <div class="mb-3">
            <label for="description" class="form-label">Description</label>
            <InputTextArea id="description" class="form-control" @bind-Value="newBook.Description" />
        </div>

        <div class="mb-3">
            <label for="imageURL" class="form-label">Image URL</label>
            <InputText id="imageURL" class="form-control" @bind-Value="newBook.imageURL" />
        </div>

        <button type="submit" class="btn btn-success">Save</button>
        <button type="button" class="btn btn-secondary ms-2" @onclick="Cancel">Cancel</button>
    </EditForm>
</div>

@code {
    private Book newBook = new Book();

    private async Task HandleValidSubmit()
    {
        await BookService.AddBookAsync(newBook);
        GoTo.NavigateTo("/books");
    }

    private void Cancel()
    {
        GoTo.NavigateTo("/books");
    }
}